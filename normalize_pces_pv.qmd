---
title: "Normalizing PCE for JEDI PV"
format: html
editor_options: 
  chunk_output_type: console
---

The purpose of this .qmd is to normalize the personal consumption expenditures multipliers for solar. When inputting the multipliers into JEDI, just like all of the other multipliers, they are meant to add up to one. For some reason, only for this column, IMPLAN has the multipliers "un-normalized", so they are in their full form. In order to get them in the correct format, we need to normalize them to all add up to 1. 

To begin, as always, we have to load our necessary libraries. 
```{r}
# Load libraries
library(here)
library(tidyverse)
library(janitor)
```

Next, we are going to read in the data for each of our pce files (one for each county). We are only interested in three columns:
- `..2` which we will rename to `code`. This is the commodity code, which is a unique identifier for goods and services
- `Household Code` which we will rename to `household_code`. This tells us the category of the pce. 
- `..13` which we will rename to `pce_dollar`. This gives us the dollar amount of the pce. This column is in dollar format, so we need to transform it to be numeric and get rid of the dollar sign and commas. 

```{r}
# Set option to prevent scientific notation
options(scipen=999)

# Read in IMPLAN personal consumption expenditures for each county and clean
pce_sb <- read_csv(here("data", "sb-pce.csv")) |>
    select("...2", "Household Code", "...13") |>
    
    # Remove first 2 rows and last row
    slice(c(3:23)) |>
    
    # Rename columns
    rename("code" = "...2",
           "household_code" = "Household Code",
           "pce_dollar" = "...13") |>
    
    # Reformat currency column
    mutate(pce_dollar = gsub("[\\$,]", "", pce_dollar),
           pce_dollar = as.numeric(pce_dollar))

pce_slo <- read_csv(here("data", "slo-pce.csv")) |>
        select("...2", "Household Code", "...13") |>
   # Remove first 2 rows and last row
    slice(c(3:23)) |>
    
    # Rename columns
    rename("code" = "...2",
           "household_code" = "Household Code",
           "pce_dollar" = "...13") |>
    
    # Reformat currency column
    mutate(pce_dollar = gsub("[\\$,]", "", pce_dollar),
           pce_dollar = as.numeric(pce_dollar))


pce_ventura <- read_csv(here("data", "ventura-pce.csv")) |>
        select("...2", "Household Code", "...13") |>
# Remove first 2 rows and last row
    slice(c(3:23)) |>
    
    # Rename columns
    rename("code" = "...2",
           "household_code" = "Household Code",
           "pce_dollar" = "...13") |>
    
    # Reformat currency column
    mutate(pce_dollar = gsub("[\\$,]", "", pce_dollar),
           pce_dollar = as.numeric(pce_dollar))
```

Now that we have our pce in the correct format, we want to actually normalize it. To do this, we are going to take the the sum of all the whole column and divide the current value by that sum. This will give us the percentage of the whole. 

Lastly, we are going to write out the modified files to our folders with the extension `-norm` to denote that they have been normalized. 

```{r}
# Normalize pce_dollar to a percentage
pce_sb$pce_percent <- pce_sb$pce_dollar / sum(pce_sb$pce_dollar)
pce_slo$pce_percent <- pce_slo$pce_dollar / sum(pce_slo$pce_dollar)
pce_ventura$pce_percent <- pce_ventura$pce_dollar / sum(pce_ventura$pce_dollar)

# Save to CSV
write.csv(pce_sb, "~/MEDS/capstone/PV Multipliers/sb-pce-norm.csv")
write.csv(pce_slo, "~/MEDS/capstone/PV Multipliers/slo-pce-norm.csv")
write.csv(pce_ventura, "~/MEDS/capstone/PV Multipliers/ventura-pce-norm.csv")
```

